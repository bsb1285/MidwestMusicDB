@page "/user/{username}"
@inject HttpClient client
@inject IJSRuntime js


<h3>Users</h3>
<br>
<SearchForm ButtonText="Search" searchModel="@_searchModel" OnValidSubmit="@Search"></SearchForm>
@if (users == null)
{
    <text>Loading ...</text>
}
else if (users.Length == 0)
{
    <text>No Records Found.</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Username</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (User u in users)
            {
                <tr>
                    <td>@u.username</td>
                    <td>@u.first_name</td>
                    <td>@u.last_name</td>
                    <td>@u.email</td>
                    <td>@u.last_access_date</td>
                    <td>
                      @if ( isFollowing(u.username))
                      {
                          <button class="btn btn-danger" @onclick="@(() => UnFollow(u.username))">Follow</button>
                      }
                      else
                      {
                          <button class="btn btn-danger" @onclick="@(() => Follow(u.username))">Follow</button>  
                      }
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    [Parameter] public string username { get; set; }
    SearchModel _searchModel = new SearchModel();
    User[] users { get; set; }
    protected override async Task OnInitializedAsync()
    {
        users = await client.GetJsonAsync<User[]>("api/user");
    }

    async Task Search()
    {
        var search_type = "user";
        users = await client.GetJsonAsync<User[]>($"api/search/{_searchModel.SearchString}/{search_type}");
    }
    async Task Follow(string followee)
    {
        await client.PostJsonAsync($"api/follower/{followee}/{this.username}", username);
    }

    async Task UnFollow(string followee)
    {
        await client.DeleteAsync($"api/follower/{followee}/{this.username}");
    }

    bool isFollowing(string followee)
    {
        return  client.GetJsonAsync<bool>($"api/follower/{followee}/{this.username}").Result;
    }
}
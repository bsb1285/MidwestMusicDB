@page "/user/{username}"
@inject HttpClient client
@inject IJSRuntime js


<h3>Users</h3>
<small>Add as many users as you wish.</small>
<div class="form-group">
    <a class="btn btn-success" href="user/create"><i class="oi oi-plus"></i>Create New</a>
</div>
<br>
@if (users == null)
{
    <text>Loading ...</text>
}
else if (users.Length == 0)
{
    <text>No Records Found.</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Username</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (User u in users)
            {
                <tr>
                    <td>@u.username</td>
                    <td>@u.first_name</td>
                    <td>@u.last_name</td>
                    <td>@u.email</td>
                    <td>@u.last_access_date</td>
                    <td>
                        
                        <button class="btn btn-danger" @onclick="@(() => Follow(u.username))">Follow</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    [Parameter] public string username { get; set; }
    SearchModel _searchModel = new SearchModel();
    User[] users { get; set; }
    protected override async Task OnInitializedAsync()
    {
        //users = await client.GetFromJsonAsync<User[]>("api/user");
        users = await client.GetJsonAsync<User[]>("api/user");
    }

    async Task Search()
    {
        var search_type = "user";
        users = await client.GetJsonAsync<User[]>($"api/search/{_searchModel.SearchString}/{search_type}");
    }
    async Task Follow(string username)
    {
        
        // var user = users.First(x => x.username == username);
        // if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {user.first_name}'s ({user.username}) Record?"))
        // {
        //     await client.DeleteAsync($"api/user/{username}");
        //     await OnInitializedAsync();
        // }
    }
}